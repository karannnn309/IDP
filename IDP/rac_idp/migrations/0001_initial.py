# Generated by Django 5.0.6 on 2025-03-21 21:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('caste_category', models.CharField(blank=True, max_length=10, null=True)),
                ('aadhar_number', models.IntegerField(blank=True, null=True)),
                ('aadhaar_document', models.FileField(blank=True, null=True, upload_to='documents/aadhaar/')),
                ('ews_certificate', models.FileField(blank=True, null=True, upload_to='documents/ews/')),
                ('caste_certificate', models.FileField(blank=True, null=True, upload_to='documents/caste/')),
                ('income_certificate', models.FileField(blank=True, null=True, upload_to='documents/income/')),
                ('university', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.CharField(blank=True, max_length=255, null=True)),
                ('year_of_passing', models.IntegerField(null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('marksheet_document', models.FileField(blank=True, null=True, upload_to='documents/income/')),
                ('work_experience', models.TextField(blank=True, null=True)),
                ('experience_certificate', models.FileField(blank=True, null=True, upload_to='documents/experience/')),
                ('extracted_data', models.JSONField(blank=True, null=True)),
                ('expected_json', models.JSONField(blank=True, null=True)),
                ('mismatches', models.JSONField(blank=True, null=True)),
                ('mismatch_percentage', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('mismatches', models.JSONField(blank=True, null=True)),
                ('mismatch_plot_path', models.CharField(blank=True, max_length=255, null=True)),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rac_idp.applicant')),
            ],
        ),
    ]
